/*
进程（Process）：是一个正在执行中的程序。
      每一个进程执行都有一个执行顺序。该顺序是一个执行路径，或者叫一个控制单元。
线程（Thread）：就是进程中的一个独立的控制单元。线程控制着进程的执行。

注意：
1、进程并不会运行，它是线程的容器。只有线程可以在内存中被执行，而进程如何分配是由OS决定的。
2、一个程序至少有一个进程，一个进程至少有一个线程。

Java VM 启动的时候会有一个进程java.exe

该进程中至少有一个线程负责java程序的执行。
而且这个线程运行的代码存在于main方法中。
该线程称之为主线程。

扩展：其实更细节说明jvm，jvm 启动不止一个线程。还有负责垃圾回收机制的线程。

1、如何在自定义的代码中，自定义一个线程呢？

通过对API的查找，java已经提供了对线程这类事物的描述。就是Thread类。

创建线程的第一种方式：继承Thread类。
步骤：1、创建类继承Thread.
	  2、复写Thread类中的run方法。
	  3、调用线程的start方法。（作用：启动线程；调用run方法）
	  注意面试:如果调用的是run方法，则仅仅是普通的对象调用。线程创建了，并没有运行。

明确一点：在某一时刻，只能有一个程序在运行。多核CPU除外
CPU在做着快速的切换，已达到看上去是同时运行的效果。
我们可以形象地把多线程的运行形容为在互相抢夺CPU的执行权。

这既是多线程的一个特性：随机性。谁抢到谁执行，执行多长，CPU说了算。

为什么要覆盖run方法？

Thread 类用于描述线程。
该类就定义了一个功能，用于存储线程要运行的代码。该存储的功能就是run方法。
也就是说 Thread类中的run 方法，用于存储线程中要运行的代码。（主线程的代码存在于main方法中）

原来线程都有自己默认的名称

Thread-编号 该编号从0开始。

static Thread currenThread():获取当前线程对象。
getName(): 获取线程名称
设置线程名称：setName或者构造函数。
-----------------------------------------------

创建线程的第二种方式：实现Runable接口

步骤：
1、定义类实现Runable接口
2、覆盖Runable接口中的run方法。将线程要运行的代码存放在该run方法中。

3、通过Thread类建立线程对象
4、将Runable接口的子类对象作为作为实际参数传递给Thread类的构造函数
   为什么要将Runable接口的子类对象传递给Thread的构造函数
   因为，自定义的run方法所属的对象是Runable接口的子类对象。
   所以要让线程去指定 指定对象的run方法。即必须明确run方法所属对象。
5、调用Thread类的start方法开启线程并调用Runable接口子类的Run方法。



（面试）两种方式的区别：
1、实现方式：避免了单继承的局限性。在定义线程时，建议使用实现方式。

2、继承Thread：线程代码存放在Thread子类Run方法中。
   实现方式：  线程代码存放在接口的子类run方法中。

XXX多线程的运行出现了安全问题：

问题的原因：当多条语句在操作同一个线程共享数据时，一个线程对多条语句只执行了一部分，还没有执行完，此时另一个线程参与执行进来。导致共享数据错误。

解决办法： 对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中其他线程不能参与执行

Java对于多线程安全提供了专业的解决方式。

一、就是同步代码块。
synchronized(任意对象)
{
	需要被同步的代码
}

对象如同锁。持有锁的线程可以在同步中执行。
没有持有锁定的线程即使获取CPU的执行权，也进不去，因为没有获取锁。

火车上的卫生间---经典。

------------------------------------------------------------
同步（synchronized）的前提：
1、必须要有两个或两个以上的线程（会使用到被同步的代码）。
2、必须是多个线程使用同一个锁!!!
-------------------------------------------------------------
必须保证同步中只有一个线程在运行。

好处：解决了多线程的安全问题
弊端：多个线程需要判断锁，较为消耗资源。

二、同步函数
同步函数用的是哪一个锁呢？
函数需要被对象调用。那么函数都有一个所属对象引用。就是this。
所以同步函数使用的锁是this。

如果同步函数被静态修饰后，使用到锁是什么呢？

通过验证，发现不是this。因为静态方法中不可以定义this。   

静态进入内存时，内存中没有本类对象，但是一定有该类对应的字节码文件对象。
类名.class  该对象的类型是Class

静态的同步方法：使用的锁是该方法所在类的字节码文件对象。即 类名.class
*/




















































