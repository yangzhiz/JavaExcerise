1、数组：数组是同一种类型数据的集合，最大的好处是数组自动给数组中元素从0开始编号，方便操作。

	数组的定义： int[][] ar ; int ar[][] ; int[] ar[];   三种等效; 但是第一种优先选择！
	             例： int[] x,y[];  知x为一维，但y为二维。 原式等价于 int[] x ; int[] y[];
		        问  y[0] = x;    正确与否？   正确  将一维素组赋值给二维数组的第一维。
			    y[0][0] = x; 正确与否？   错误  x为一维数组，不能赋值给具体元素。
2、内存分配：
   栈（存局部变量）：数据使用完毕，会自动释放
     --------局部变量：定义在方法中的变量，定义在方法中的参数上的变量，for循环中的变量
   堆（存成员变量、数组、对象以及通过new建立的实例）：1.堆内存中每一个实体都有一个内存地址值。   ！在java语法中，数组的地址等于数组第一个元素的地址。
					              2.堆内存的实体都有默认的初始化值，元素类型为基本数据类型int则默认为0，double-0.0
					                float-0.0f  boolean-false String-null。 而数组为引用数据类型，默认初始化值为null
					              3.利用垃圾回收机制清除堆内存中不再被使用的实体。（区别于C++:程序员手动清除）

   例：int[] x = new int [3]; //x存储于栈内存，而new int [3]存储于堆。堆会将数组的首地址传递给栈，即为数组的地址。

3、数组排序；
   1.选择排序；第一个数与之后的数值进行一轮比较。相当于一次内循环。每一次内循环之后，最值出现在数组第一位。然后从第二位开始，进行第二轮排序。
   2.冒泡排序：相邻两位进行比较。每一次都使最值排在最后。第二次排序将不与最后一位比较。
   3.Java已经定义好的排序方式：import java.util.*;                 Array.sort(arr);
4、折半查找:提高效率，但是数组必须有序。